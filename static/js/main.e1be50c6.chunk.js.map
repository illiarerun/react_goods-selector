{"version":3,"sources":["App.tsx","index.tsx"],"names":["Operation","goodsFromServer","App","state","selectedGoods","goodsOperationsHandler","event","operation","good","preventDefault","Add","setState","Remove","filter","goodItem","this","goodsLengthCheck","length","slice","join","className","type","onClick","onKeyDown","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mKAqBKA,E,kGAjBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAOGD,O,aAAAA,I,oBAAAA,M,SA6GUE,E,4MAvGbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,uBAAyB,SACvBC,EACAC,EACAC,GAIA,OAFAF,EAAMG,iBAEEF,GACN,KAAKP,EAAUU,IACTF,GACF,EAAKG,UAAS,SAACR,GAAD,MAAY,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BI,QAGtE,MACF,KAAKR,EAAUY,OACTJ,GACF,EAAKG,UAAS,SAACR,GAAD,MACZ,CAAEC,cAAeD,EAAMC,cAAcS,QAAO,SAAAC,GAAQ,OAAIA,IAAaN,W,4CAS/E,WAAU,IAAD,OACCJ,EAAkBW,KAAKZ,MAAvBC,cACFY,EAAmBZ,EAAca,OAAS,EAAvB,UAClBb,EAAcc,MAAM,GAAI,GAAGC,KAAK,MADd,gBAC2Bf,EAAcA,EAAca,OAAS,GADhE,2BAElBb,EAAc,GAFI,gBAIzB,OACE,sBAAKgB,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,6BACGhB,EAAca,OAASD,EAAmB,wBAE1CZ,EAAca,QACf,wBACEI,KAAK,SACLC,QAAS,WACP,EAAKX,SAAS,CAAEP,cAAe,MAEjCmB,UAAW,WACT,EAAKZ,SAAS,CAAEP,cAAe,MANnC,kBAaJ,6BACGH,EAAgBuB,KAAI,SAAChB,GAAD,OACnB,6BACE,sBAAKY,UAAU,YAAf,UACE,mBACEA,UAAWK,IAAW,iBAAkB,CAAE,0BAA2BrB,EAAcsB,SAASlB,KAD9F,SAGGA,IAGDJ,EAAcsB,SAASlB,GAEnB,wBACEa,KAAK,SACLC,QAAS,SAAChB,GACR,EAAKD,uBAAuBC,EAAON,EAAUY,OAAQJ,IAEvDe,UAAW,SAACjB,GACV,EAAKD,uBAAuBC,EAAON,EAAUY,OAAQJ,IANzD,oBAaA,wBACEa,KAAK,SACLC,QAAS,SAAChB,GACR,EAAKD,uBAAuBC,EAAON,EAAUU,IAAKF,IAEpDe,UAAW,SAACjB,GACV,EAAKD,uBAAuBC,EAAON,EAAUU,IAAKF,IANtD,qBAvBDA,e,GA3DHmB,IAAMC,WCvBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e1be50c6.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nenum Operation {\n  Add,\n  Remove,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  goodsOperationsHandler = (\n    event: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<HTMLButtonElement>,\n    operation: Operation,\n    good?: string,\n  ) => {\n    event.preventDefault();\n\n    switch (operation) {\n      case Operation.Add:\n        if (good) {\n          this.setState((state) => ({ selectedGoods: [...state.selectedGoods, good] }));\n        }\n\n        break;\n      case Operation.Remove:\n        if (good) {\n          this.setState((state) => (\n            { selectedGoods: state.selectedGoods.filter(goodItem => goodItem !== good) }\n          ));\n        }\n\n        break;\n      default:\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const goodsLengthCheck = selectedGoods.length > 1\n      ? `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`\n      : `${selectedGoods[0]} is selected`;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__top\">\n          <h1>\n            {selectedGoods.length ? goodsLengthCheck : 'No goods selected'}\n          </h1>\n          {!!selectedGoods.length && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n              onKeyDown={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li key={good}>\n              <div className=\"App__good\">\n                <p\n                  className={classNames('App__good-text', { 'App__good-text-selected': selectedGoods.includes(good) })}\n                >\n                  {good}\n                </p>\n                {\n                  selectedGoods.includes(good)\n                    ? (\n                      <button\n                        type=\"button\"\n                        onClick={(event) => {\n                          this.goodsOperationsHandler(event, Operation.Remove, good);\n                        }}\n                        onKeyDown={(event) => {\n                          this.goodsOperationsHandler(event, Operation.Remove, good);\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        onClick={(event) => {\n                          this.goodsOperationsHandler(event, Operation.Add, good);\n                        }}\n                        onKeyDown={(event) => {\n                          this.goodsOperationsHandler(event, Operation.Add, good);\n                        }}\n                      >\n                        Add\n                      </button>\n                    )\n                }\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}