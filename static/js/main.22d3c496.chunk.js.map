{"version":3,"sources":["App.tsx","index.tsx"],"names":["Operation","goodsFromServer","App","state","selectedGoods","goodsOperationsHandler","operation","good","Add","setState","Remove","filter","goodItem","this","goodsLengthCheck","length","slice","join","className","type","onClick","onKeyDown","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mKAqBKA,E,kGAjBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAOGD,O,aAAAA,I,oBAAAA,M,SAmGUE,E,4MA7FbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,uBAAyB,SAACC,EAAsBC,GAC9C,OAAQD,GACN,KAAKN,EAAUQ,IACb,EAAKC,UAAS,SAACN,GAAD,MAAY,CAAEC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BG,QAEpE,MACF,KAAKP,EAAUU,OACb,EAAKD,UAAS,SAACN,GAAD,MACZ,CAAEC,cAAeD,EAAMC,cAAcO,QAAO,SAAAC,GAAQ,OAAIA,IAAaL,W,4CAQ7E,WAAU,IAAD,OACCH,EAAkBS,KAAKV,MAAvBC,cACFU,EAAmBV,EAAcW,OAAS,EAAvB,UAClBX,EAAcY,MAAM,GAAI,GAAGC,KAAK,MADd,gBAC2Bb,EAAcA,EAAcW,OAAS,GADhE,2BAElBX,EAAc,GAFI,gBAIzB,OACE,sBAAKc,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,6BACGd,EAAcW,OAASD,EAAmB,wBAE1CV,EAAcW,QACf,wBACEI,KAAK,SACLC,QAAS,WACP,EAAKX,SAAS,CAAEL,cAAe,MAEjCiB,UAAW,WACT,EAAKZ,SAAS,CAAEL,cAAe,MANnC,kBAaJ,6BACGH,EAAgBqB,KAAI,SAACf,GAAD,OACnB,6BACE,sBAAKW,UAAU,YAAf,UACE,mBACEA,UAAWK,IAAW,iBAAkB,CAAE,0BAA2BnB,EAAcoB,SAASjB,KAD9F,SAGGA,IAGDH,EAAcoB,SAASjB,GAEnB,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKf,uBAAuBL,EAAUU,OAAQH,IAEhDc,UAAW,WACT,EAAKhB,uBAAuBL,EAAUU,OAAQH,IANlD,oBAaA,wBACEY,KAAK,SACLC,QAAS,WACP,EAAKf,uBAAuBL,EAAUQ,IAAKD,IAE7Cc,UAAW,WACT,EAAKhB,uBAAuBL,EAAUQ,IAAKD,IAN/C,qBAvBDA,e,GAjDHkB,IAAMC,WCvBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22d3c496.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nenum Operation {\n  Add,\n  Remove,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  goodsOperationsHandler = (operation: Operation, good: string) => {\n    switch (operation) {\n      case Operation.Add:\n        this.setState((state) => ({ selectedGoods: [...state.selectedGoods, good] }));\n\n        break;\n      case Operation.Remove:\n        this.setState((state) => (\n          { selectedGoods: state.selectedGoods.filter(goodItem => goodItem !== good) }\n        ));\n\n        break;\n      default:\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const goodsLengthCheck = selectedGoods.length > 1\n      ? `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods[selectedGoods.length - 1]} are selected`\n      : `${selectedGoods[0]} is selected`;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__top\">\n          <h1>\n            {selectedGoods.length ? goodsLengthCheck : 'No goods selected'}\n          </h1>\n          {!!selectedGoods.length && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n              onKeyDown={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <ul>\n          {goodsFromServer.map((good) => (\n            <li key={good}>\n              <div className=\"App__good\">\n                <p\n                  className={classNames('App__good-text', { 'App__good-text-selected': selectedGoods.includes(good) })}\n                >\n                  {good}\n                </p>\n                {\n                  selectedGoods.includes(good)\n                    ? (\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          this.goodsOperationsHandler(Operation.Remove, good);\n                        }}\n                        onKeyDown={() => {\n                          this.goodsOperationsHandler(Operation.Remove, good);\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        onClick={() => {\n                          this.goodsOperationsHandler(Operation.Add, good);\n                        }}\n                        onKeyDown={() => {\n                          this.goodsOperationsHandler(Operation.Add, good);\n                        }}\n                      >\n                        Add\n                      </button>\n                    )\n                }\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}